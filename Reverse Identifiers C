#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main(){
	
        unsigned int c;
        char word[1000][1000] = {0};
        char reversed[1000][1000] = {0};
        int isIdent = 0, i=0, j=0, m=0, f=0, k=0, r=0;
        int correct = 1;
        int identIndex[100] = {0};
        
		while(1){
                c = fgetc(stdin);
                if (c == EOF) break;
                
                word[i][j] = c;
                j++;
                
                if ( (c >= 'a' && c <= 'z') || (c >='A' && c <='Z') || (c == '_') || ( c >= '0' && c <= '9' && isIdent == 1)) { /* if ident only then number is not a prob*/
                   isIdent = 1;
               }
                else if(c == ' ' || c == '\n') {
                    
                   if(isIdent == 1 && correct == 1) {
                       identIndex[m] = i;
                       m++;
                   }
                    i++;
                    j=0;
                    correct = 1;
                    isIdent = 0;
               }
                else{ /* if((c<'a' || c>'z') && (c<'A' || c>'Z') && (c!= '_') && (c < 0 || c > 9)) */
                   isIdent = 0;
                   correct = 0;
               }
        }
        
        /* now I have array of strings and I know which of them are identifiers*/
        
        
        
        for(f=0;f<i;f++) {
       
            if(f == identIndex[k]) {
            for(j=0;j < strlen(word[f]); j++) {
               
               reversed[r][j] = word[f][strlen(word[f])-j-1];
            
            }
            r++;
            k++;
            }
        }
        
        k=0;
        r=0;
        for(f=0;f<i;f++) {
            if(f == identIndex[k]) {
            for(j=0;j < strlen(word[f]); j++) {
                if(j==strlen(word[f]) - 1) {
                    if(reversed[r][0] == ' ' ) {
                  word[f][j] = ' ';  
                    }
                    else if (reversed[r][0] == '\n') {
                       word[f][j] = '\n';  
                    }
                }
                
                 else {
               word[f][j] = reversed[r][j+1];
                 }
            }
            k++;
            r++;
            }
        }
        
        
        
        for(f=0;f<=i;f++) {
            for(j=0;j < strlen(word[f]); j++) {
                printf("%c", word[f][j]);
            }
            
        }
        
        
		
		return 0;
}
